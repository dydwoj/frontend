<< fontend >>
    참고 : basic 폴더

    웹(앱) 개발 : 프론트 / 백엔드
        - frontend : html, css, javascript, react, vue...
        - backend : node.js, java, python, 닷넷...

        기반기술 : 서버, 네트워크

    => 브라우저 기반

    - 브라우저를 통해서 실행될 수 있는 언어
        1) HTML(HyperText Markup Language)
            참고 : index, text, list
            => 웹브라우저에서 표기되도록 설계된 표준 마크업 언어
            => 화면 구조 설계

            * 마크업 : 태그
            * <html> : 열기 </html> 닫기 => <> + </> 열고 닫기임
            * ! 엔터 : 자동완성(에밋)
            * ctrl + / : 주석
            
            - 타입
                => 가장 처음 타입을 선언
                    => ex. DOCTYPE html => html5

            - head & body
                head : 크롬의 창 이름 같은 느낌
                body : 크롬의 화면에 송출
            
            - 실행
                마우스 오른쪽 => open with live server

            - 태그 (암기)
                - 속성 : 키=값 => ex. 태그 : html / 속성 : lang="en"

                * 부분 잡기 => ctrl + shift + p => wrap => b : 부분만 잡아서 태그 처리하기

                => 대소문자 구분하지 않음
                => 엔터가 적용되지 않음 => 엔터 적용 : br 태그 == enter(1번)
                    => <br /> : 닫는 태그가 아니라서 사용하는거
                => 공백(스페이스바)은 한번만 적용
                => 부모 - 자식 존재 : 자식이 보여지고 그것을 감싸는 부모가 보여짐

                - bodytag
                    1) heading tag : h1 ~ h6
                        => 크기, bold, enter(가 들어있음)

                    2) paragraphs(문단) tag : p
                        => 자동 줄바꿈(엔터)가 들어감

                    3) caption tag : 제목 넣을 때 사용

                    4) format tag
                        참고 : text

                        1. 진하게
                            b : bold text
                            strong : Important
                        2. 기울임
                            i : Italic text
                            em : Emphasize text
                        3. 글자 가운데 취소선
                            del : deleted text
                        4. 첨자
                            sup : 윗첨자
                            sub : 아랫첨자
                    
                    5) list tag : 목록태그
                        참고 : list

                        1. 순서 없는 목록
                            ul : unordered list
                        2. 순서 있는 목록
                            ol : ordered list
                                => start="숫자" : 번호 시작 순서
                                => type="타입" : 숫자 대신 순서를 표현하는 방식
                        * 하나의 목록
                            li : list item
                        3. dl : description list
                            dt : description-term => 단어 정의
                            dd : description-description => 단어 설명
                    
                    6) link tag
                        참고 : link

                            * id : id로 가려면 링크 안에 #을 붙여서 갈수 있음
                            
                        - a
                          href="" : ""안에 연결할 사이트 주소 or 파일(다운로드) or 이메일
                            * ./내가만든페이지 : 내가만든 페이지로 이동
                            - 외부주소(다른 사이트) or 내부주소(같은 사이트 내의 다른 페이지)
                                1) 상대경로(주소) : 같은 사이트 내의 다른페이지
                                    => ( . ) : 현재경로
                                    => ( . . ) : 상위경로
                                    * 같은경로 : (.)점을 굳이 안찍어도 됨 
                                2) 절대경로(주소) : 
                                    => ex. https://www.naver.com/, c:/download/

                                - 파일을 연결한 경우
                                    => 브라우저가 해석이 가능한 파일이면 바로 열림
                                        - download : 다운로드 창이 나오게 할 수 있음
                                    => 해석이 불가능할 경우 다운로드 창이 나옴

                          target="" : 연결할 사이트를 어디에서 열 것인가?
                            => _self (default) : 현재 창에서 열림
                            => _blank : 새창에서 열림
                          download="" : 특정파일을 다운로드하게 할 수 있음
                            * txt 파일은 브라우저가 해석이 가능해서 바로 열림

                            방문 안한 링크 : unvisited link => 밑줄, blue
                            방문 한 링크 : visited link => 밑줄, purple
                            링크 누를때 : active link => 밑줄, red

                    7) img tag
                        참고 : img

                        src="" : 경로
                            => 존재하지 않는 경로면 alt만 뜸
                            => dowload 한 것과 다른 이미지 주소를 복사해서 사용 가능
                        alt="" : 시각장애인을 위한 무슨 사진인지 설명해주는 말
                        => 이미지가 너무 크면 사이즈 조절 필요
                        => 적절한 사이즈는 바둑판식으로 들어감
                    
                    8) table tag : ★★★ 수업 중요 태그 ★★★
                        참고 : table

                        * 내용을 넣어줘야 공간을 잡고 보여줌
                        * &nbsp; : 공백(스페이스바) 1번

                        table
                         tr(행 - row)
                          td(열 - column)
                            colspan="숫자" : 만들어진 열에 맞춰 숫자를 입력하면 병합함
                            rowspan="숫자" : 만들어진 행에 맞춰 숫자를 입력하면 병합함
                                => 그만큼 다음 행의 열의 개수가 조정되야 함
                          th(열 - 제목 column) : bold, 수평(center 정렬)

                    9) form tag : ★★★ 수업 중요 태그 ★★★
                        참고 : form

                        => 다른 form을 자식 요소로 사용할 수 없음
                        
                        - 속성
                            1) ★ action="" : 경로 (전송한 정보를 처리할 웹페이지 URL)
                                => ("") 경로가 없는 경우 : 경로 = 자기자신
                                ex. http://192.168.55.42:5500/basic/form1.html?fruits=on&fruits1=on&fruits1=on
                                    http://ip주소:포트번호
                                    => http://192.168.55.42:5500/
                                        => 192.168.55.42 : 아이피 주소
                                        => 5500 : 포트 번호

                                    => /basic/form1.html
                                        => 자기자신 (?) 전까지

                                    - GET 방식 : 데이터 전송시 아래와 같은 형태로 따라감
                                    => fruits=on&fruits1=on&fruits1=on
                                        => fruits=on : 키=값
                                        => & : and
                                        => fruits1=on : 키=값

                                        * 서버경로?키=값&키=값

                            2) ★ method=""
                                2-1. GET : default
                                    => search=get 방식
                                    => 키=값 / &=and
                                    키 : name
                                    값 : text=입력값 / checkbox, radio = 체크한값
                                        => 주소줄에 키/벨류가 남음
                                2-2. POST
                                    => 주소줄에 안보이게 싸서 보내는 방식
                            3) autocomplete="on/off" : 자동완성 사용 여부 (on-default)
                            4) name="이름" : 고유한 양식의 이름
                            5) novalidate : 서버로 데이터 전송시 유효성 검사하지 않음
                                => 속성 지정 안할 시
                                    1. email : 입력값이 존재할 때 간단하게 이메일 형식이 맞는지 확인
                                        => 입력값 존재 X시 검증 안함
                                        => 형태가 완전하지 않아도 보냄
                                    2. required : 필수 입력
                            6) value
                                - 필수사용
                                    => radio, checkbox, option, submit, reset, button
                                    => 나머지는 선택
                            7) readonly : 수정이 안됨
                            8) required : 필수 입력
                            9) autofocus : 처음부터 들어가자마자 입력 대기상태
                            10) disabled : 이용불가
                            11) size, maxlength : 입력 크기
                                min, max : 최소/최대 설정
                                    => 보통 date 와 사용
                            12) multiple : 여러개 복수 지정 가능
                                => file에 사용
                            13) pattern : 입력 형식 지정
                                => regex 이용
                            14) placeholder : 무엇을 입력해야 하는지 알려주는 용도
                            15) step="숫자" : 단위를 몇개씩 올릴건지
                            16) cols : 영역의 너비 지정
                            17) rows : 영역의 라인수 지정

                        - input type
                            => 사용자로부터 입력 받을 수 있음
                            => button type 과 비슷함
                            
                            - 속성
                                1) text : 사용자한테 문자를 입력받기 위해 사용 (한 행 정도)
                                    => value 값 입력시 : 처음부터 지정한 입력으로 나옴
                                2) radio : 여러개 중에서 하나 선택용으로 사용 (단일 선택)
                                  => name 을 맞추면 하나만 선택 가능
                                3) checkbox : 여러개 선택용으로 사용 (다중 선택)
                                4) button : 모양만 버튼 모양으로 나옴
                                5) submit : action 이 지정한 곳으로 폼 내용 전송
                                6) reset : 폼안의 입력 내용을 reset 시켜줌
                                7) color : 색깔 선택가능
                                8) number : 숫자 입력, 조절 가능
                                    => number 가 아닌 숫자에 대한 자체 검열 가능
                                9) date : 날짜 나옴
                                   datetime : 시간 나옴 -> 잘 사용 X
                                   datetime-local : 달력과 시간 같이 나옴
                                   month
                                   week
                                   time
                                10) email : 이메일 입력 가능
                                    => @ 기호가 없으면 알려줌 (유효검증) : validate / if 쓰기 싫으면 : novalidate
                                11) password : 비밀번호 입력가능
                                12) file : 파일 선택 가능
                        
                            - 그 외 속성
                                1) textarea : 글자를 쓸 수 있음
                                2) select : option 과 함께 사용하여 선택 창 만들 수 있음

                        - 그 외 type
                            fieldset : 영역지정
                                + legend : 영역 이름 지정 가능
        
                    - 전역속성 : 모든 태그에 사용할 수 있는 속성
                        참고 : attr, semantic
                        
                        1) class : 한 페이지 내에서 중복 사용 가능
                            => 클래스명 두개 쓰는법
                                ex) "'name ' + name"
                        2) id : 한 페이지 내에서 중복 사용 불가능
                            => 중복 사용해도 에러를 내지 않음
                        3) data-* : *에 오는 내용 대문자로 작성 금지
                            ex. data-animalType => ( X ) => data-animal-type ( O )
                            => 스크립트나 css 에서 불러다가 사용할 수 있음
                        4) style : 디자인시 사용
                        5) name : 이름주기

                    - non-semantic / semantic
                        - non-semantic : 태그를 봐도 어떤 의민지 명확하지 않은 것
                            => div, span
                        - semantic : 태그를 봐도 의미가 명확한 것
                            => img, table, article, header, aside, footer, nav, section...

                    - 요소배치
                        1) 인라인 배치 : 바로 옆에 붙여버리는 태그
                            => img, a, b, strong, input, textarea, select
                        2) 블럭 배치 : 한줄 다 쓰는 태그들
                            => header, h1, div, ul, ol, li, table
                        

    << Extension 툴 >>

        - preitier
            => 자동으로 작성한 코드들을 정리해주는 용도

         - auto rename tag
             => 앞에 태크를 바꾸면 자동으로 뒷 태그도 바꿔주는 거

    << 그 외 >>

        - 인터넷 브라우저에서 f12
            => devtools : 브라우저가 가진 개발자를 위한 코드
                => head의 main.css 지우면 실체가 나온다...


